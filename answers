1 Задание

1. Что понравилось больше?
Maven. С ним как-то сразу всё понятно было, документация удобная и понятная и куча примеров в сети есть. При создании нового проекта можно выбрать образец и сразу же будет pom.xml. Это на взгляд новичка. Наверное, ещё изименю мнение.

2. Что такое pom.xml
Файл, который описывает всю структуру проекта, на основе которого Maven собирает этот проект. В нём описаны все зависимости, области действия этих зависимостей и ещё много чего.

3. На сколько уменьшился jar файл?
Файл весил 103,7 МБ, стал весить 101,5 МБ

4. Что делают флаги?

<arg>-Xfatal-warnings</arg> - если появляются предупреждения, то они считаются ошибками
<arg>-Xlint</arg> - включает дополнительные предупреждения
<arg>-deprecation</arg> - выдаёт предупреждение об использовании устаревших API
<arg>-explaintypes</arg> - подробнее описывает возникшие ошибки


2 Задание

1. Какой минимальный интервал выполнения проверки репозитория?
1 час, но можно и вручную.

2. Какие файлы загружает в репозиторий maven?
Файлы pom и файлы с их хеш-суммой. Иногда ещё jar и хешсумма.

3. Какие настройки надо задать, что б загрузить файл в нексус,требующий аутентификации, с помощью maven ?

В папке maven лежит файл settings.xml. В него нужно добавить вот это (вписав нужного пользователя и пароль):
<servers>
    <server>
      <id>server001</id>
      <username>my_login</username>
      <password>my_password</password>
      <privateKey>${user.home}/.ssh/id_dsa</privateKey>
      <passphrase>some_passphrase</passphrase>
      <filePermissions>664</filePermissions>
      <directoryPermissions>775</directoryPermissions>
      <configuration></configuration>
    </server>
  </servers>

3 Задание

Что такое real time обработка? 2 часа это реалтайм? А 10 секунд? А 10мс? Где граница?

Это такая обработка ингформации, при которой результат этой обработки отдаётся параллельно с поступлением этой информации. Границы как таковой нет, но думаю, в некоторых ситуациях есть требования к максимальному времени обработки.

Как подсчитать максимальную и минимальную задержку между появлением сообщения в кафка producer и появлением результат обработки этого сообщения в нашем приложении(терминал, база, распределенная память)?

Если продюсер и приложение на разных машинах, то для начала необходимо синхронизировать часы. Минимальное время - это время обработки одного самого короткого сообщения. Вообще, это время, я думаю, зависит от многих факторов (загруженность сети, процессора и т.д.), поэтому это случайная величина и чёткого ответа не будет. Статистики бы провели как можно больше экспериментов и нашли среднее значение. Максимальное время, я думаю, находится при двух условиях: гарантированная обработка и негарантированная. При негарантированной нужно подавать столько сообщений в единицу времени, чтобы часть из них не обрабатывалась и так же замерить интервалы между поылкой ии обработкой, найти среднее. При гарантированной обработке нужно каким-то образом найти границу между тем, когда все сообщения обрабатываются и когда какие-то нет. И вот на этой границе провести эксперименты.

Почему Kafka быстро компилируется, а Spark долго?
Spark выполняет гораздо больше функций, больше зависимостейт и т.п.

Как перед завершением работы приложения выполнить какой-то код?
Поместить этот код в блок sys.ShutdownHookThread

Добавьте вывод дополнительной информации как в коде ниже. Что написало приложение?
ERROR Fake$: DEBUG info:localhost:2181
Я сделал это сообщение ERROR, так как все остальные отключил

Скомпилировать Spark при помощи zinc
Точно не помню, сколько времени ушло. Записи оставил на работе, но без zink было минут 30, а с zink 100 с чем-то секунд.

5 Задание
Если спарк делает распределенные вычисления - почему мы уверенны, что он не будет писать со многих нод сразу в один файл?
Операции вывода DStream создают отдельный файл для каждой части RDD, поэтому и не пишется всё в один файл. В моей программке каждый раз создаётся новый поток. Как только он записывает свою часть данных, он закрывается, следующую часть пишет другой поток.
Таким образом в любой момент времени в один файл пишет только один поток.

